namespace gamma_api;

table TermFilter {
  field:string;
  value:[ubyte];
  is_union:bool;
}

table RangeFilter {
  field:string;
  lower_value:[ubyte];
  upper_value:[ubyte];
  include_lower:bool;
  include_upper:bool;
}

table VectorQuery {
  name:string;
  value:[ubyte];
  min_score:double;
  max_score:double;
  boost:double;
  has_boost:int;
}

enum DistanceMetricType : byte { InnerProduct = 0, L2 }

table Request {
  req_num:int;                    // request number
  topn:int;                       // top n similar results
  direct_search_type:int;         // 1 : direct search; 0 : normal search
  vec_fields:[VectorQuery];       // vec_field array
  fields:[string];
  range_filters:[RangeFilter];
  term_filters:[TermFilter];
  metric_type:DistanceMetricType;
  online_log_level:string;        // DEBUG, INFO, WARN, ERROR
  has_rank:int;                   // default 0, has not rank; 1, has rank
  multi_vector_rank:int;
  parallel_based_on_query:bool;   // 
  l2_sqrt:bool;                   // default FALSE, don't do sqrt; TRUE, do sqrt
}

root_type Request;
